return {
  'goolord/alpha-nvim',
  dependencies = { 'echasnovski/mini.icons', 'nvim-tree/nvim-web-devicons'},
  config = function()
    local dashboard = require('alpha.themes.dashboard')

dashboard.section.header.val = {
      [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠀⠂⠐⠀⠂⠐⠀⠠⠀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
      [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠌⡠⣄⠈⠠⠀⠀⠀⠀⠀⠀⠠⠐⢀⢁⢄⢦⢢⢣⢪⢲⢱⢰⢔⢄⢌⢀⠡⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
      [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠡⡪⡊⢆⢇⠈⠄⠀⠀⠀⠄⢁⢔⠴⡱⡱⡣⡣⡣⡣⡣⡣⡣⡣⡣⡣⡣⡣⡣⡢⡈⠈⠄⡀⠀⠀⠀⠀⠄⢈⢀⠡⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
      [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⢜⢰⠸⡨⡸⡀⠂⡁⠄⢁⢆⢇⢇⢏⢎⢎⢎⢎⢎⢎⢎⢎⢎⢎⢎⢎⠮⡪⡪⣪⢪⡣⠄⠂⡀⢈⠀⢂⢜⢜⢕⠥⡀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
      [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⢘⢜⢔⢑⡱⡸⡌⠄⠠⡐⡕⡕⡕⣕⢕⢕⢕⢕⢕⢜⢜⢜⢜⢜⢜⢜⢜⢕⢕⢕⢕⢕⢜⢝⢄⠐⠀⡐⡜⡜⠔⡅⡣⡂⠐⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
      [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢐⢸⠸⡘⡕⡅⡣⠁⠂⡔⡕⡕⡕⡕⡕⡕⡕⡕⡕⡕⡕⡕⡕⡕⡕⡕⡕⡕⡕⡕⡕⡕⡕⡕⡕⠁⠠⢰⢱⢱⢘⢌⡒⢔⠢⠈⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
      [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠀⠉⢀⠐⡕⢌⠪⡸⣐⠐⢀⢪⢪⢪⡪⡪⡪⡪⡪⡪⡪⡪⡪⡪⡪⡪⡪⡪⡪⡪⡪⡪⡪⣪⢪⠪⠂⠠⡘⡜⢜⠌⢆⢣⠲⡑⢕⠅⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
      [[          ⠀⠄⠁⠄⢁⠠⠀⠨⡪⡪⡪⡣⡣⠈⡀⢎⢎⠊⢈⠈⠊⡎⣎⢎⠮⡪⡪⡪⡪⡪⡪⢊⠊⠊⠪⡪⡪⡪⡪⠊⠀⢔⢕⢝⢔⢑⢅⢊⢪⢘⠌⠌⡀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
      [[⠀⠀⠀⠀⠀⠀⠀⠀⠠⠈⡀⠂⠈⡀⠄⠈⠠⣑⠱⡨⠪⢊⠀⠄⢱⢅⠐⠀⠌⢀⢕⢎⢎⢵⠱⡍⡎⡎⡎⡎⡀⠄⢁⠐⡸⡸⡸⠐⠀⡡⡣⡣⡣⡱⡨⡢⡣⡑⠔⣑⠁⢀⠠⠈⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
      [[⠀⠀⠀⠀⠀⠀⠀⠌⢀⠐⢀⠈⠄⠠⠀⠁⠄⢂⠃⠂⡁⠠⡐⡤⡸⡸⡱⡱⡸⡸⡸⠈⡎⡎⡎⡎⡎⡎⡎⡎⡖⡔⡔⡜⡜⡜⠠⠁⡰⡱⡱⡱⡱⡑⡕⡕⡕⡜⡜⠔⠈⠀⠠⠀⠠⠁⠂⡀⠀⠀⠀⠀⠀⠀⠀]],
      [[⠀⠀⠀⠀⠀⠀⠌⠠⠀⡐⠀⠐⢈⠠⢁⠐⡀⠂⡈⢄⢖⢝⢜⢜⠜⠌⡜⡜⡜⠜⠀⡜⡜⡜⡜⡜⠌⡸⡸⡸⡸⡸⡸⡨⠨⠐⢀⢢⢣⢣⠣⣃⢪⠐⡜⠜⢌⠪⡪⠈⡀⠁⠐⠈⡀⠌⠀⠄⡀⠀⠀⠀⠀⠀⠀]],
      [[⠀⠀⠀⠀⢀⠁⡐⢈⠀⠄⠈⠄⠂⢐⠀⡂⠐⡀⡜⡜⡜⡜⠜⠀⢁⢆⢇⠧⠁⢂⢸⢸⢸⢸⢸⠈⢰⢱⢱⢱⢱⢱⠱⢀⢀⢰⢪⢪⢪⢪⢕⠔⣁⢎⠜⢌⠢⠱⠁⠠⠀⠌⠀⢂⠀⠄⢁⠂⡀⠂⠀⠀⠀⠀⠀]],
      [[⠀⠀⠀⠀⠄⢐⠀⢂⠀⠂⡁⠄⢈⠠⠐⠀⠂⡰⡱⢕⠁⠂⡠⡸⡸⡸⡘⢈⠀⡜⡜⡜⡜⡜⡂⠨⡸⡸⡸⡸⡸⡸⡡⠀⢪⢪⢪⢪⠪⣊⢪⢪⢪⢢⢃⡑⡬⠁⡈⠠⢈⠠⠈⠠⠀⠂⢐⠀⡂⠈⠄⠀⠀⠀ ]],
      [[⠀⠀⠀⠐⢀⠂⡈⠄⠀⢂⠐⡀⠄⠐⡈⢀⠁⡸⡘⢀⠂⡕⡜⡜⡜⡜⡀⠂⡸⡸⡜⡪⡪⡪⠀⡐⡕⡕⡕⡕⡕⡕⡕⡀⠂⡁⠣⢣⠱⡐⢔⢕⠕⡑⡕⡕⠀⠂⡀⠂⠄⠀⢂⠡⠀⡁⢐⠀⡂⠡⠀⡁⠀⠀⠀]],
      [[⠀⠀⢀⠁⡐⢀⠂⠐⠈⠠⠐⡀⠐⡀⢂⠐⠀⢜⠌⠀⢜⢜⢎⢎⢎⢎⠀⠄⡇⡇⡇⡇⡇⣇⠂⡀⢎⢎⢎⢎⢎⢎⢎⢕⠥⡄⠈⡀⠑⡌⡎⡢⢑⢐⠑⠀⡀⠡⠀⠅⠈⡀⢂⠐⡀⠄⠐⡀⠂⠌⠠⠐⢀⠀⠀]],
      [[⠀⠀⠄⠐⡀⢂⠨⠀⠁⠄⡁⠄⠁⡠⡠⡰⡸⡸⢌⠄⠂⠕⡕⡕⡕⣕⠀⠂⢣⢣⢣⢣⢣⢣⢣⠀⠠⠑⡑⢑⠱⠱⢱⢱⢹⢸⢱⠀⡈⢜⢔⢨⠐⡀⠂⠁⠄⠡⢈⠀⢁⠀⡂⠄⠠⠀⠡⠀⠅⠨⠐⢈⠀⡀⠀]],
      [[⠀⠀⠂⡁⢐⠀⡂⠈⡀⠂⠄⠐⠈⠪⡪⡪⡪⡪⠕⡁⠐⠈⡪⡪⡪⡪⡪⡀⠌⢊⢎⢎⢎⢎⢖⢕⢄⠠⠀⢄⢄⢈⠠⠑⡕⡕⡕⠄⡀⡎⡎⠎⡀⠠⠠⠁⠌⠐⡀⠐⢀⠂⡐⢀⠂⠈⠄⠡⠈⠄⠡⠐⡀⠠⠀]],
      [[⠀⡈⠄⢂⠐⡀⢂⠁⠀⠌⠠⢁⠈⠀⠐⠠⠈⠀⠁⡀⠂⡁⡸⡸⡸⡸⡸⡠⠀⠐⠈⢪⢪⢪⢪⢪⢪⢂⠠⢱⢱⢱⠀⠂⡣⡣⡣⠁⠠⡣⡫⠅⡀⠐⡈⠄⡁⠂⠠⠈⡀⢂⠐⡀⠄⠁⠌⠠⠁⠌⠠⠁⠄⠂⠀]],
      [[⠀⠠⠐⢀⠂⡐⢀⠂⠁⠠⢁⠐⡈⢐⠀⠐⡀⠌⠀⢂⢁⢤⢪⢪⢎⢎⠮⠀⠂⡕⡈⠀⢕⢕⢕⢕⢕⠁⡀⡪⡪⡪⠄⠂⡘⢎⠮⡐⠈⢪⢪⠅⠀⢂⠐⠠⠐⠈⢀⠂⡐⢀⠂⠠⠀⠌⠠⠁⠌⡈⠄⡁⢂⠈⠄]],
      [[⠀⡁⡈⠄⢐⠀⡂⠐⠈⡀⢂⠐⡀⠂⠄⠁⠠⠀⢝⢜⢜⢜⢜⢜⢜⠜⠠⠁⡸⣘⢆⢈⠠⢣⢣⢣⠃⠀⢔⢕⢕⢍⢇⢆⢀⠨⠈⠄⠂⡱⡱⡁⡁⠠⠈⠄⠂⢈⠠⠐⡀⢂⠈⠄⠂⡈⠄⡁⢂⠐⡀⢂⠐⠠⠀]],
      [[⠀⠄⠠⠈⠄⠂⠄⡁⠂⠠⠐⡀⢂⠡⢈⠐⠀⠁⠠⠁⢃⢃⠃⡃⠑⠈⢀⢜⢜⢜⢜⠄⠀⢕⢕⢕⠄⠁⡑⢕⢕⢕⢕⢕⢕⡲⡰⡰⡪⡪⡪⡆⢀⠂⢁⠐⠀⡂⠄⠡⠐⢀⠂⠐⢀⠐⡀⢂⠐⡐⢀⠂⠌⡀⠂]],
      [[⠀⠂⡁⠌⠠⢁⠐⡀⠁⠄⠂⢐⠀⠂⠀⠂⠁⠂⠄⠠⠀⠀⡀⡠⡰⡸⡸⡸⡸⡸⡸⡌⠠⠈⢎⢎⢕⠅⢀⠸⡸⡸⡸⡱⡱⡱⡱⡱⡱⡱⡱⡡⠀⠄⠂⠀⡂⢐⠈⠄⡁⢂⠀⡁⠄⢂⠐⡀⢂⠐⠠⠈⠄⡐⠀]],
      [[⠀⠁⡀⢂⠡⠀⠂⡀⠁⠐⠈⢀⠠⡀⠀⡀⠀⠄⠐⢀⠠⢀⠀⠌⢎⢎⢎⢎⢎⢎⡎⡎⡆⡈⠠⠑⠈⠠⢀⢜⢜⢜⢜⢜⢜⢜⢜⢜⢜⢜⢜⠔⠀⠂⡈⠄⠐⠀⠂⡁⠄⠂⡀⠄⠂⡐⢀⠂⠂⠌⠠⢁⠂⠄⠂]],
      [[⠀⠐⠀⡂⠐⠈⠀⠀⠀⠐⡠⠀⠀⠀⡀⠁⠀⡀⠠⠀⢂⢠⡐⡄⠑⢕⢕⢵⢱⢱⢱⢱⢱⢱⢢⢢⢢⢢⢣⢣⢣⢣⢣⡣⡇⡇⡧⡣⡣⡣⡣⠡⠈⠀⠀⠀⠀⠀⠀⠀⠄⢁⠠⠐⠐⢀⠂⠌⠠⠡⠈⠄⢂⠀⠂]],
      [[⠀⠀⡁⠄⠀⠀⠀⠀⠀⠀⠀⠀⠄⡡⣀⢅⢄⢄⢆⢇⢇⢇⢎⢞⠲⡄⡇⡇⡇⡇⡇⡇⡇⡇⡇⡇⡇⡇⡇⡇⡇⡇⡗⡜⡜⡜⡜⡜⡜⣜⠪⠀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠠⠀⠀⠀⠀⠀⠀⠁⠄⠡⢈⠠⠀⠐]],
      [[ ⠀⠐  ⠀⠀⠀⠀⠀⠀⠐⠈⢜⠰⡑⢜⢜⢸⢨⢊⢎⢎⢪⠪⡪⠺⢬⡈⠘⡘⠜⢜⢜⢜⢜⢜⢜⢜⢜⢜⢜⢜⢜⢜⢜⢜⡜⡜⣜⠀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠡⠠⠐⠀⠀]],
      [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠑⠌⡪⡘⢔⢕⠕⡕⡱⡱⡡⡣⡣⡪⡱⡱⡘⡆⠤⡐⠀⠐⠀⠅⠑⡕⡕⡕⡕⣕⢕⢕⢇⢗⢕⢕⢕⢕⠄⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡀⠂⠀⠀]],
      [[⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⡀⠱⡠⡑⡅⡣⡑⢜⢔⢱⢸⢨⢢⢣⢣⢪⢸⢨⠣⠡⠁⠂⠐⠀⠁⠸⡸⡸⡸⡸⡸⡪⡪⡪⡪⡪⡪⣪⠠⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠄⠁⠀⠀]],
      [[⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⠀⠐⠠⢑⠸⡐⢎⢐⠱⢰⢑⠕⡕⡱⠌⠆⠑⠀⠠⠀⠀⠀⠀⠀⢈⠠⡣⡣⡣⡣⡳⡱⡱⡕⡣⡫⡪⡲⠀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
      [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⠀⠅⡘⢌⠢⢅⡑⡌⠎⠊⢈⠐⠈⠀⠀⠀⠀⠀⠀⠀⠀⠠⠐⡜⡜⡕⡕⣕⢕⢕⢕⢕⢕⡕⣕⠁⡐⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
      [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⠀⠈⠀⡀⠀⠀⠂⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠀⡎⡎⡎⡎⣎⢎⢎⢇⢏⢎⢎⢖⠀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
      [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡈⠄⡎⡎⣎⢎⢎⢎⢎⢮⢪⢪⢪⡪⠀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
      [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠂⢠⢪⢪⡪⡪⡪⣪⢪⢣⢣⢣⢣⡣⡊⢀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
      [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⢀⢸⢸⢸⢸⢸⢸⡸⡸⡸⡸⡸⡸⠜⡐⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ]],
      [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠀⠄⡑⠕⢕⢕⢕⢕⠕⢕⠝⠘⢈⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
      [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠠⠐⠀⠈⠀⠀⠐⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ]],
      [[]],
      [[                ▄█▄      ▄     ▄▄▄▄▀ ▄  █   ▄   █       ▄           ]],
      [[                █▀ ▀▄     █ ▀▀▀ █   █   █    █  █        █          ]],
      [[                █   ▀  █   █    █   ██▀▀█ █   █ █     █   █         ]],
      [[                █▄  ▄▀ █   █   █    █   █ █   █ ███▄  █   █         ]],
      [[                ▀███▀  █▄ ▄█  ▀        █  █▄ ▄█     ▀ █▄ ▄█         ]],
      [[                        ▀▀▀           ▀    ▀▀▀         ▀▀▀          ]],
      [[                                                                    ]],
      [[             ██   █ ▄▄  █ ▄▄  █▄▄▄▄ ████▄     ▄   ▄███▄   ██▄       ]],
      [[             █ █  █   █ █   █ █  ▄▀ █   █      █  █▀   ▀  █  █      ]],
      [[             █▄▄█ █▀▀▀  █▀▀▀  █▀▀▌  █   █ █     █ ██▄▄    █   █     ]],
      [[             █  █ █     █     █  █  ▀████  █    █ █▄   ▄▀ █  █      ]],
      [[                █  █     █      █           █  █  ▀███▀   ███▀      ]],
      [[               █    ▀     ▀    ▀             █▐                     ]],
      [[              ▀                              ▐                      ]],

  }

    dashboard.section.buttons.val = {
      dashboard.button('r', '  Recent files', ":lua require('telescope.builtin').oldfiles()<CR>"),
      dashboard.button('e', '  New file', ':ene <BAR> startinsert <CR>'),
      dashboard.button('f', '  Find file', ":lua require('telescope.builtin').find_files()<CR>"),
      dashboard.button('t', '󱎸  Find text', ":lua require('telescope.builtin').live_grep()<CR>"),
      dashboard.button('n', '󰠮  Notes', ":lua require('telescope.builtin').find_files({cmd=[[fd -t f -e 'md' -e 'txt' -e 'qalc']],cwd =[[~/notes]]})<CR>"),
      dashboard.button('c', '  Configuration', ':e $MYVIMRC <CR>'),
      dashboard.button('z', '󰒲  Lazy', ':Lazy<CR>'),
      dashboard.button('q', '  Quit', ':qa<CR>'),
    }
    dashboard.section.buttons.opts.spacing = 0

          vim.api.nvim_create_autocmd('User', {
        pattern = 'LazyVimStarted',
        callback = function()
          local stats = require('lazy').stats()
          local ms = (math.floor(stats.startuptime * 100 + 0.5) / 100)
          dashboard.section.footer.val = '󱎫  ' .. ms .. ' ms'
          pcall(vim.cmd.AlphaRedraw)
        end,
      })

      dashboard.config.layout = {
        dashboard.section.header,
        -- options = randomHeader, raven, yggdrasil,
        -- void_stranger, aot, meatboy, isaac, gta,
        -- hydra, spider, morse, sharp, galaxy,
        { type = 'padding', val = 2 },
        dashboard.section.buttons,
        { type = 'padding', val = 2 },
        dashboard.section.footer,
      }

      dashboard.opts.opts.noautocmd = true
      require('alpha').setup(dashboard.opts)

  end,
}
